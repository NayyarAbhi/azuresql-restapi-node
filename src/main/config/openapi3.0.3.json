{
    "openapi": "3.0.3",
    "info": {
      "title": "Swagger Prospect Management Micro Service - OpenAPI 3.0",
      "description": "This is Prospect Management Micro Service Node Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [https://swagger.io](https://swagger.io). In the third iteration of the prospect managment micro service, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.",
      "termsOfService": "http://swagger.io/terms/",
      "contact": {
        "email": "apiteam@swagger.io"
      },
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      },
      "version": "1.0.11"
    },
    "externalDocs": {
      "description": "Find out more about Swagger",
      "url": "http://swagger.io"
    },
    "servers": [
      {
        "url": "https://prospect.swagger.io/api/v3"
      }
    ],
    "tags": [
      {
        "name": "Find Prospect",
        "description": "Everything about Find Prospect",
        "externalDocs": {
          "description": "Find out more",
          "url": "http://swagger.io"
        }
      },
      {
        "name": "Find Prospect Information",
        "description": "Everything about Find Prospect information",
        "externalDocs": {
          "description": "Find out more",
          "url": "http://swagger.io"
        }
      }
    ],
    "paths": {
      "/api/v1/prospect/{ProspectId}/fetch": {
        "get": {
          "tags": [
            "Find Prospect Information"
          ],
          "summary": "Find prospect by prospect id",
          "description": "Find prospect by prospect id",
          "operationId": "findProspectById",
          "parameters": [
            {
              "name": "x-authorization-id",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string",
                "format": "dummyValue"
              },
              "description": "Unique Request Id."
            },
            {
              "name": "ProspectId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              },
              "description": "Prospect Id."
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProspectInformation"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ProspectInformation"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Prospect not found"
            },
            "405": {
              "description": "Validation exception"
            }
          }
        }
      },
      "/api/v1/prospect/{ProspectId}/fetch/{PayloadIdentifier}": {
        "get": {
          "tags": [
            "Find Prospect Information"
          ],
          "summary": "Find prospect by prospect id",
          "description": "Find prospect by prospect id",
          "operationId": "findProspectById",
          "parameters": [
            {
              "name": "x-authorization-id",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string",
                "format": "dummyValue"
              },
              "description": "Unique Request Id."
            },
            {
              "name": "ProspectId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              },
              "description": "Prospect Id."
            },
            {
              "name": "PayloadIdentifier",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "NewHomeCalculator"
              },
              "description": "Payload Identifier value."
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProspectInformations"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ProspectInformations"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Prospect not found"
            },
            "405": {
              "description": "Validation exception"
            }
          }
        }
      },
      "/api/v1/prospect/{ProspectId}/fetch/{PayloadIdentifier}/{PayloadId}": {
        "get": {
          "tags": [
            "Find Prospect Information"
          ],
          "summary": "Find prospect by prospect id",
          "description": "Find prospect by prospect id",
          "operationId": "findProspectById",
          "parameters": [
            {
              "name": "x-authorization-id",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string",
                "format": "dummyValue"
              },
              "description": "Unique Request Id."
            },
            {
              "name": "ProspectId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              },
              "description": "Prospect Id."
            },
            {
              "name": "PayloadIdentifier",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "NewHomeCalculator"
              },
              "description": "Payload Identifier value."
            },
            {
              "name": "PayloadId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "PL1001"
              },
              "description": "Payload Id value."
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProspectInformations"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ProspectInformations"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Prospect not found"
            },
            "405": {
              "description": "Validation exception"
            }
          }
        }
      },
      "/api/v1/prospect/{ProspectId}": {
        "get": {
          "tags": [
            "Find Prospect"
          ],
          "summary": "Find prospect by prospect id",
          "description": "Find prospect by prospect id",
          "operationId": "findProspectById",
          "parameters": [
            {
              "name": "x-authorization-id",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string",
                "format": "dummyValue"
              },
              "description": "Unique Request Id."
            },
            {
              "name": "ProspectId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              },
              "description": "Prospect Id."
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Prospect"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Prospect"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Prospect not found"
            },
            "405": {
              "description": "Validation exception"
            }
          }
        }
      },
      "/api/v1/prospect/find": {
        "post": {
          "tags": [
            "Find Prospect"
          ],
          "summary": "Find Prospect by IdentifierType and IdentifierValue",
          "description": "Find Prospect by IdentifierType and IdentifierValue",
          "operationId": "findProspect",
          "parameters": [
            {
              "name": "x-authorization-id",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string",
                "format": "dummyValue"
              },
              "description": "Unique Request Id."
            }
          ],
          "requestBody": {
            "description": "Create a new Prospect in the store",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindProspectSchema"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FindProspectSchema"
                }
              },
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/FindProspectSchema"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Prospect"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Prospect"
                  }
                }
              }
            },
            "405": {
              "description": "Invalid input"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "ProspectInformations": {
          "type": "array",
          "xml": {
            "wrapped": true
          },
          "items": {
            "$ref": "#/components/schemas/ProspectInformationSchema"
          }
        },
        "ProspectInformation": {
          "type": "object",
          "properties": {
            "prospect_id": {
              "type": "integer",
              "example": 10000001
            },
            "ProspectIdentifier": {
              "type": "array",
              "xml": {
                "wrapped": true
              },
              "items": {
                "$ref": "#/components/schemas/ProspectInformationSchema"
              }
            }
          }
        },
        "ProspectInformationSchema": {
          "type": "object",
          "properties": {
            "prospect_id": {
              "type": "integer",
              "example": 10000001
            },
            "payload_id": {
              "type": "string",
              "example": "PID1"
            },
            "payload_identifier": {
              "type": "string",
              "example": "NewHomeCalculator"
            },
            "payload_body": {
              "type": "string",
              "example": "{name: Lloyds}"
            },
            "active_from": {
              "type": "string",
              "example": "17-01-2023"
            },
            "active_to": {
              "type": "string",
              "example": "17-01-2023"
            }
          },
          "xml": {
            "name": "ProspectInformationSchema"
          }
        },
        "ProspectIdentifierSchema": {
          "type": "object",
          "properties": {
            "prospect_id": {
              "type": "integer",
              "example": 10000001
            },
            "prospect_identifier_id": {
              "type": "string",
              "example": "PID1"
            },
            "identifier": {
              "type": "string",
              "example": "SessionId"
            },
            "identifier_type": {
              "type": "string",
              "example": 12345621
            },
            "active_from": {
              "type": "string",
              "example": "17-01-2023"
            },
            "active_to": {
              "type": "string",
              "example": "17-01-2023"
            }
          },
          "xml": {
            "name": "ProspectSchema"
          }
        },
        "ProspectSchema": {
          "type": "object",
          "properties": {
            "prospect_id": {
              "type": "integer",
              "example": 10000001
            },
            "created_on": {
              "type": "number",
              "example": "17-01-2023"
            },
            "brand_identifier": {
              "type": "string",
              "example": "Lloyds"
            },
            "channel_identifier": {
              "type": "string",
              "example": "channel"
            },
            "first_name": {
              "type": "string",
              "example": "Mike"
            }
          },
          "xml": {
            "name": "ProspectSchema"
          }
        },
        "FindProspectSchema": {
          "type": "object",
          "properties": {
            "IdentifierType": {
              "type": "string",
              "example": "SessionId"
            },
            "IdentifierValue": {
              "type": "string",
              "example": 1234521
            }
          },
          "xml": {
            "name": "FindProspectSchema"
          }
        },
        "Prospect": {
          "type": "object",
          "properties": {
            "Prospect": {
              "type": "array",
              "xml": {
                "wrapped": true
              },
              "items": {
                "$ref": "#/components/schemas/ProspectSchema"
              }
            },
            "ProspectIdentifier": {
              "type": "array",
              "xml": {
                "wrapped": true
              },
              "items": {
                "$ref": "#/components/schemas/ProspectIdentifierSchema"
              }
            }
          }
        },
        "ApiResponse": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32"
            },
            "type": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          },
          "xml": {
            "name": "##default"
          }
        }
      }
    }
  }